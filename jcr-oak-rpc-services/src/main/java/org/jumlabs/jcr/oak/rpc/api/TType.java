/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.jumlabs.jcr.oak.rpc.api;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum TType implements org.apache.thrift.TEnum {
  BINARIES(0),
  BINARY(1),
  BOOLEAN(2),
  BOOLEANS(3),
  DATE(4),
  DATES(5),
  DOUBLE(6),
  DOUBLES(7),
  LONG(8),
  LONGS(9),
  NAME(10),
  NAMES(11),
  PATH(12),
  PATHS(13),
  STRING(14),
  STRINGS(15),
  UNDEFINED(16),
  UNDEFINEDS(17),
  URI(18),
  URIS(19);

  private final int value;

  private TType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static TType findByValue(int value) { 
    switch (value) {
      case 0:
        return BINARIES;
      case 1:
        return BINARY;
      case 2:
        return BOOLEAN;
      case 3:
        return BOOLEANS;
      case 4:
        return DATE;
      case 5:
        return DATES;
      case 6:
        return DOUBLE;
      case 7:
        return DOUBLES;
      case 8:
        return LONG;
      case 9:
        return LONGS;
      case 10:
        return NAME;
      case 11:
        return NAMES;
      case 12:
        return PATH;
      case 13:
        return PATHS;
      case 14:
        return STRING;
      case 15:
        return STRINGS;
      case 16:
        return UNDEFINED;
      case 17:
        return UNDEFINEDS;
      case 18:
        return URI;
      case 19:
        return URIS;
      default:
        return null;
    }
  }
}
